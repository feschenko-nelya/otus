name: CMake

on:
  label:
    types: [created, edited]
  push:
    # branches: [ "main" ]
    paths: 'hw-1/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  SOURCE_DIR: ${{github.workspace}}/hw-1

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
            submodules: true

    - name: Make sudo
      run: sudo apt-get update 
           && sudo apt-get install libboost-test-dev -y 
           && sudo apt-get install libgtest-dev libgmock-dev
           && sudo apt-get install libtbb-dev
  
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ${{env.SOURCE_DIR}} -B ${{env.SOURCE_DIR}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPATCH_VERSION=${{github.run_number}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{env.SOURCE_DIR}}/build --config ${{env.BUILD_TYPE}}

    - name: Configure CMake Boost Tests
      run: cmake ${{env.SOURCE_DIR}} -B ${{env.SOURCE_DIR}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build Boost Tests
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/tests/boost_test/hw-1/
      run: cmake --build ${{github.workspace}}/tests/boost_test/hw-1/ --config ${{env.BUILD_TYPE}}
      
    - name: Boost Tests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --progress  --test-dir ./build

    - name: Configure CMake Google Tests
      run: cmake ${{env.SOURCE_DIR}} -B ${{env.SOURCE_DIR}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build Google Test
      run: cmake --build ${{env.SOURCE_DIR}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Google Tests
      run: ctest -C ${{env.BUILD_TYPE}} --progress --test-dir ${{env.SOURCE_DIR}}/build

    - name: Create Package
      run: cmake --build ${{env.SOURCE_DIR}}/build --target package
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
          tag_name: ${{github.run_number}}
          release_name: Release ${{github.run_number}}
          draft: false
          prerelease: false
          working_directory: ${{env.SOURCE_DIR}}
          
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ${{github.workspace}}/build/helloworld-0.0.${{github.run_number}}-Linux.deb
          asset_name: helloworld-0.0.${{github.run_number}}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

